{"version":3,"sources":["webpack:///./src/app/pages/enquiry/enquiry-dilog/enquiry-dilog.component.html","webpack:///./src/app/pages/enquiry/enquiry/enquiry.component.html","webpack:///./src/app/pages/enquiry/enquiry-dilog/enquiry-dilog.component.scss","webpack:///./src/app/pages/enquiry/enquiry-dilog/enquiry-dilog.component.ts","webpack:///./src/app/pages/enquiry/enquiry.model.ts","webpack:///./src/app/pages/enquiry/enquiry.module.ts","webpack:///./src/app/pages/enquiry/enquiry/enquiry.component.scss","webpack:///./src/app/pages/enquiry/enquiry/enquiry.component.ts","webpack:///./src/app/pages/enquiry/enquiry_Service/enquiry-service.service.ts"],"names":[],"mappings":"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","file":"pages-enquiry-enquiry-module-es5.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title><span *ngIf=\\\"!user?.id\\\">Add</span><span *ngIf=\\\"user?.id\\\">Edit</span> Enquiry\\n  <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"add_form()\\\" style=\\\"float: right; color: white;\\\">\\n    <mat-icon>add_to_queue</mat-icon>\\n  </button>\\n</h1>\\n\\n\\n <!-- <div mat-dialog-content *ngIf=\\\"!form_field\\\">\\n  <form [formGroup]=\\\"form\\\" fxLayout=\\\"row wrap\\\" class=\\\"user-form\\\">\\n    <div fxLayout=\\\"column\\\" class=\\\"form-field-outer\\\">\\n      <div fxFlex=\\\"100\\\">\\n        <mat-form-field style=\\\"width: 24%;\\\">\\n          <input matInput placeholder=\\\"Enquiry Type\\\" formControlName=\\\"enquiry_type\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%; padding-left: 1%;\\\">\\n          <mat-select placeholder=\\\"Customer type\\\" formControlName=\\\"customer_type\\\">\\n            <mat-option [value]=\\\"gender\\\">value</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%; padding-left: 1%;\\\">\\n          <input matInput placeholder=\\\"organisation_name\\\" formControlName=\\\"organisation_name\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%;padding-left: 1%;\\\">\\n          <mat-select placeholder=\\\"Source\\\" formControlName=\\\"source\\\" (selectionChange)=\\\"changeuserRole()\\\">\\n            <mat-option *ngFor=\\\"let source_data of source ; let i = index\\\" [value]=\\\"source_data\\\">\\n              {{source_data.lead_name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div fxFlex=\\\"100\\\">\\n        <mat-form-field style=\\\"width: 24%;\\\">\\n          <input matInput placeholder=\\\"Mobile Number\\\" formControlName=\\\"mobile_no\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%; padding-left: 1%;\\\">\\n          <input matInput placeholder=\\\"Fist Name\\\" formControlName=\\\"fist_name\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%; padding-left: 1%;\\\">\\n          <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"last_name\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 24%;padding-left: 1%;\\\">\\n          <input matInput placeholder=\\\"Email*\\\" formControlName=\\\"email\\\">\\n        </mat-form-field>\\n      </div>\\n      <div fxFlex=\\\"100\\\">\\n        <mat-form-field style=\\\"width: 32%;\\\">\\n          <mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\">\\n            <mat-option [value]=\\\"gender\\\">value</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 32%; padding-left: 1%;\\\">\\n          <mat-select placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n            <mat-option [value]=\\\"gender\\\">value</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 32%;padding-left: 1%;\\\">\\n          <input matInput placeholder=\\\"Pin Code\\\" formControlName=\\\"pin_code\\\">\\n        </mat-form-field>\\n      </div>\\n      <div fxFlex=\\\"100\\\">\\n        <mat-form-field style=\\\"width: 50%;\\\">\\n          <textarea matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\"></textarea>\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 49%; padding-left: 1%;\\\">\\n          <textarea matInput placeholder=\\\"Requrments/Products\\\" formControlName=\\\"requrment_product\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </form>\\n</div> -->\\n<div mat-dialog-content *ngIf=\\\"!form_field\\\">\\n  <form [formGroup]=\\\"orderForm\\\" fxLayout=\\\"row wrap\\\" class=\\\"user-form\\\">\\n    <div fxLayout=\\\"column\\\" class=\\\"form-field-outer\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"fields-container\\\">\\n        <div formArrayName=\\\"received\\\" >\\n          <div>\\n            <mat-form-field style=\\\"width: 50%;\\\" *ngFor=\\\"let item of orderForm.get('received').controls; let i = index;\\\"  [formGroupName]=\\\"i\\\">\\n              <input matInput placeholder=\\\"{{enquiry_field[i]?.field_name}}\\\" type=\\\"{{enquiry_field[i]?.field_type}}\\\" formControlName=\\\"value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <!-- <mat-form-field style=\\\"width: 50%;\\\">\\n          <input matInput placeholder=\\\"country\\\" formControlName=\\\"country\\\">\\n        </mat-form-field> -->\\n      </div>\\n    </div>\\n  </form>\\n</div> \\n\\n<div mat-dialog-content *ngIf=\\\"form_field\\\">\\n  <form [formGroup]=\\\"orderForm\\\" fxLayout=\\\"row wrap\\\" class=\\\"user-form\\\">\\n    <div fxLayout=\\\"column\\\" class=\\\"form-field-outer\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"fields-container\\\">\\n        <!-- <mat-form-field style=\\\"width: 50%;\\\">\\n          <input matInput placeholder=\\\"compony\\\" formControlName=\\\"compony\\\">\\n        </mat-form-field>\\n        <mat-form-field style=\\\"width: 50%;\\\">\\n          <input matInput placeholder=\\\"country\\\" formControlName=\\\"country\\\">\\n        </mat-form-field> -->\\n        <div formArrayName=\\\"received\\\" *ngFor=\\\"let item of orderForm.get('received').controls; let i = index;\\\">\\n          <div [formGroupName]=\\\"i\\\">\\n            <mat-form-field style=\\\"width: 40%;\\\">\\n              <input matInput formControlName=\\\"field_name\\\" placeholder=\\\"Form field Name\\\">\\n            </mat-form-field>\\n            <mat-form-field style=\\\"width: 40%;\\\">\\n              <!-- <input matInput formControlName=\\\"field_type\\\" placeholder=\\\" Form field type\\\"> -->\\n              <mat-select placeholder=\\\"Field Type\\\" formControlName=\\\"field_type\\\">\\n                <mat-option value=\\\"{{userRole}}\\\" *ngFor=\\\"let userRole of title\\\">{{userRole | titlecase }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <span style=\\\"width: 10%; margin-left: 1%;\\\">\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"removePeriod(i)\\\">-</button>\\n            </span>\\n            <span style=\\\"width: 10%; margin-left: 1%;\\\">\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"addItem()\\\">+</button>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" *ngIf=\\\"!form_field\\\">\\n  <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"submit()\\\" [mat-dialog-close]=\\\"orderForm.value\\\"\\n    [disabled]=\\\"!orderForm.valid\\\"><span *ngIf=\\\"!user?.id\\\">Save</span><span *ngIf=\\\"user?.id\\\">Update</span></button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"close()\\\">Cancel</button>\\n</div>\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" *ngIf=\\\"form_field\\\">\\n  <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"create_form()\\\" [mat-dialog-close]=\\\"orderForm.value\\\"\\n    [disabled]=\\\"!orderForm.valid\\\"><span *ngIf=\\\"!user?.id\\\">Save Form</span><span *ngIf=\\\"user?.id\\\">Update</span></button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"close()\\\">Cancel</button>\\n</div>\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"flex-p\\\">\\n  <div fxLayout=\\\"row\\\">\\n      <mat-button-toggle-group #controls=\\\"matButtonToggleGroup\\\" appearance=\\\"legacy\\\">            \\n          <mat-button-toggle value=\\\"add\\\" (click)=\\\"openUserDialog(null)\\\">\\n              <mat-icon>person_add</mat-icon>\\n          </mat-button-toggle>\\n          <mat-button-toggle value=\\\"search\\\">\\n              <mat-icon>search</mat-icon>\\n          </mat-button-toggle>           \\n      </mat-button-toggle-group>            \\n  </div>\\n  <form class=\\\"user-search\\\" [class.show]=\\\"controls.value == 'search'\\\">\\n      <mat-form-field class=\\\"user-search-input\\\">\\n          <input matInput placeholder=\\\"Search user by name...\\\" [(ngModel)]=\\\"searchText\\\" name=\\\"search\\\">\\n      </mat-form-field>\\n  </form>\\n  <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-button-toggle-group #viewType=\\\"matButtonToggleGroup\\\" appearance=\\\"legacy\\\">            \\n          <mat-button-toggle value=\\\"grid\\\" checked=\\\"true\\\">\\n              <mat-icon>view_module</mat-icon>\\n          </mat-button-toggle>\\n          <mat-button-toggle value=\\\"list\\\">\\n              <mat-icon>view_list</mat-icon>\\n          </mat-button-toggle>           \\n      </mat-button-toggle-group>\\n  </div> -->\\n</div>\\n\\n\\n<div fxLayout=\\\"row wrap\\\">    \\n  <div *ngFor=\\\"let user of users | paginate: { itemsPerPage: 6, currentPage: page } ; let i = index;\\\" fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"33.3\\\" fxFlex.md=\\\"50\\\" class=\\\"flex-p\\\"> \\n      <mat-card class=\\\"p-0\\\">  \\n          <div class=\\\"bg-primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <h3 class=\\\"user-name\\\">{{users[i].received[0].value}}</h3> \\n              <!-- <h3 *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"user-name\\\">User blocked</h3> -->\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" #menuTrigger=\\\"matMenuTrigger\\\">\\n                  <mat-icon>more_vert</mat-icon>\\n              </button>\\n          </div>\\n          <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\n              <span (mouseleave)=\\\"menuTrigger.closeMenu()\\\">\\n                  <button mat-menu-item (click)=\\\"openUserDialog(user)\\\">\\n                      <mat-icon>mode_edit</mat-icon>\\n                      <span>Edit</span>\\n                  </button>\\n                  <button mat-menu-item (click)=\\\"deleteUser(user);\\\">\\n                      <mat-icon>delete</mat-icon>\\n                      <span>Delete</span>\\n                  </button>\\n              </span>\\n          </mat-menu>\\n          <div class=\\\"user-content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n              <div fxFlex=\\\"30\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                  <div class=\\\"user-img\\\">\\n                      <!-- <img *ngIf=\\\"user.profile.image\\\" [src]=\\\"user.profile.image\\\" class=\\\"transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\"> -->\\n                      <img src=\\\"../../../../assets/img/users/user.jpg\\\" class=\\\"transition-2\\\" >  \\n                      <!-- <mat-icon *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"warn-color\\\">block</mat-icon> -->\\n                  </div>                                            \\n                  <div class=\\\"user-social\\\">\\n                      <mat-slide-toggle color=\\\"primary\\\" ></mat-slide-toggle>\\n                  </div>\\n              </div>\\n              <div fxFlex=\\\"70\\\" fxLayout=\\\"column\\\" class=\\\"user-details transition-2\\\">\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let data of user.received\\\">\\n                      <!-- <mat-icon class=\\\"muted-text\\\">card_membership</mat-icon> -->\\n                      <span style=\\\"font-weight: bold;\\\" *ngIf=\\\"data?.field_name\\\"> {{data?.field_name}} : </span> <span *ngIf=\\\"data?.field_name\\\">  {{data?.value}}</span>\\n                  </p>\\n              </div>\\n          </div>\\n      </mat-card>\\n  </div>\\n</div>\\n\\n\\n<!-- <div *ngIf=\\\"viewType.value == 'grid'\\\" fxLayout=\\\"row wrap\\\">    \\n  <div *ngFor=\\\"let user of users | UserSearchPipe : searchText | paginate: { itemsPerPage: 6, currentPage: page }\\\" fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"33.3\\\" fxFlex.md=\\\"50\\\" class=\\\"flex-p\\\"> \\n      <mat-card class=\\\"p-0\\\">  \\n          <div class=\\\"bg-primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <h3 *ngIf=\\\"!user.settings.isDeleted\\\" class=\\\"user-name\\\">{{user.profile.name}} {{user.profile.surname}}</h3> \\n              <h3 *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"user-name\\\">User blocked</h3>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" #menuTrigger=\\\"matMenuTrigger\\\">\\n                  <mat-icon>more_vert</mat-icon>\\n              </button>\\n          </div>\\n          <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\n              <span (mouseleave)=\\\"menuTrigger.closeMenu()\\\">\\n                  <button mat-menu-item (click)=\\\"openUserDialog(user)\\\">\\n                      <mat-icon>mode_edit</mat-icon>\\n                      <span>Edit</span>\\n                  </button>\\n                  <button mat-menu-item (click)=\\\"deleteUser(user);\\\">\\n                      <mat-icon>delete</mat-icon>\\n                      <span>Delete</span>\\n                  </button>\\n              </span>\\n          </mat-menu>\\n          <div class=\\\"user-content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n              <div fxFlex=\\\"30\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                  <div class=\\\"user-img\\\">\\n                      <img *ngIf=\\\"user.profile.image\\\" [src]=\\\"user.profile.image\\\" class=\\\"transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\">\\n                      <img *ngIf=\\\"!user.profile.image\\\" src=\\\"assets/img/users/default-user.jpg\\\" class=\\\"transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\">  \\n                      <mat-icon *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"warn-color\\\">block</mat-icon>\\n                  </div>                                            \\n                  <div class=\\\"user-social\\\">\\n                      <mat-slide-toggle color=\\\"primary\\\" [checked]=\\\"user.settings.isDeleted\\\" (change)=\\\"user.settings.isDeleted = !user.settings.isDeleted\\\"></mat-slide-toggle>\\n                  </div>\\n              </div>\\n              <div fxFlex=\\\"70\\\" fxLayout=\\\"column\\\" class=\\\"user-details transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\">\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"muted-text\\\">card_membership</mat-icon>\\n                      <span>{{user.work.position}}</span>\\n                  </p>\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"muted-text\\\">mail_outline</mat-icon>\\n                      <span>{{user.contacts.email}}</span>\\n                  </p>\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"muted-text\\\">call</mat-icon>\\n                      <span>{{user.contacts.phone}}</span>\\n                  </p>\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"muted-text\\\">location_on</mat-icon>\\n                      <span>{{user.contacts.address}}</span>\\n                  </p>\\n                  <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"muted-text\\\">date_range</mat-icon>\\n                      <span>Joined {{user.settings.joinedDate | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</span>\\n                  </p>\\n              </div>\\n          </div>\\n      </mat-card>\\n  </div>\\n</div> -->\\n\\n<!-- <div *ngIf=\\\"viewType.value == 'list'\\\" fxLayout=\\\"row wrap\\\">\\n  <div *ngFor=\\\"let user of users | UserSearchPipe : searchText | paginate: { itemsPerPage: 6, currentPage: page }\\\" fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n      <mat-card class=\\\"p-0\\\">  \\n          <div class=\\\"bg-primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <h3 *ngIf=\\\"!user.settings.isDeleted\\\" class=\\\"user-name\\\">{{user.profile.name}} {{user.profile.surname}}</h3> \\n              <h3 *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"user-name\\\">User blocked</h3>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" #menuTrigger=\\\"matMenuTrigger\\\">\\n                  <mat-icon>more_vert</mat-icon>\\n              </button>\\n          </div>\\n          <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\"  overlapTrigger=\\\"true\\\">\\n              <span (mouseleave)=\\\"menuTrigger.closeMenu()\\\">\\n                  <button mat-menu-item (click)=\\\"openUserDialog(user);\\\">\\n                      <mat-icon>mode_edit</mat-icon>\\n                      <span>Edit</span>\\n                  </button>\\n                  <button mat-menu-item (click)=\\\"deleteUser(user);\\\">\\n                      <mat-icon>delete</mat-icon>\\n                      <span>Delete</span>\\n                  </button>\\n              </span>\\n          </mat-menu>\\n          <div class=\\\"user-content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n              <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                  <div class=\\\"user-img\\\">\\n                      <img *ngIf=\\\"user.profile.image\\\" [src]=\\\"user.profile.image\\\" class=\\\"transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\"> \\n                      <img *ngIf=\\\"!user.profile.image\\\" src=\\\"assets/img/users/default-user.jpg\\\" class=\\\"transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\">  \\n                      <mat-icon *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"warn-color\\\">block</mat-icon>   \\n                  </div>                                            \\n                  <div class=\\\"user-social\\\">\\n                      <mat-slide-toggle color=\\\"primary\\\" [checked]=\\\"user.settings.isDeleted\\\" (change)=\\\"user.settings.isDeleted = !user.settings.isDeleted\\\"></mat-slide-toggle>\\n                  </div>\\n              </div>\\n              <div fxFlex=\\\"80\\\" fxFlex.xs=\\\"70\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" class=\\\"user-details transition-2\\\" [class.blocked]=\\\"user.settings.isDeleted\\\">\\n                  <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"100\\\" fxLayout=\\\"column\\\">\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">business</mat-icon>\\n                          <span>{{user.work.company}}</span>\\n                      </p>\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">card_membership</mat-icon>\\n                          <span>{{user.work.position}}</span>\\n                      </p>\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">attach_money</mat-icon>\\n                          <span>{{user.work.salary}}</span>\\n                      </p>                                               \\n                  </div>\\n                  <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"100\\\" fxLayout=\\\"column\\\">\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">mail_outline</mat-icon>\\n                          <span>{{user.contacts.email}}</span>\\n                      </p> \\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">call</mat-icon>\\n                          <span>{{user.contacts.phone}}</span>\\n                      </p>\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">location_on</mat-icon>\\n                          <span>{{user.contacts.address}}</span>\\n                      </p>                        \\n                  </div>\\n                  <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"100\\\" fxLayout=\\\"column\\\">\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">event_available</mat-icon>\\n                          <span>Registration {{user.settings.registrationDate | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</span>\\n                      </p>\\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon class=\\\"muted-text\\\">date_range</mat-icon>\\n                          <span>Joined {{user.settings.joinedDate | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</span>\\n                      </p> \\n                      <p fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <mat-icon *ngIf=\\\"user.settings.isDeleted\\\" class=\\\"muted-text\\\">person_outline</mat-icon>\\n                          <mat-icon *ngIf=\\\"!user.settings.isDeleted\\\" class=\\\"muted-text\\\">person</mat-icon>\\n                          <span>{{ (user.settings.isDeleted) ? 'Blocked' : 'Active' }}</span>\\n                      </p>                       \\n                  </div>\\n              </div>\\n          </div>\\n      </mat-card>\\n  </div>\\n</div> -->\\n\\n<div *ngIf=\\\"users\\\" fxLayout=\\\"row wrap\\\">\\n  <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n      <mat-card class=\\\"p-0 text-center\\\">           \\n          <pagination-controls class=\\\"gradus-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"3\\\" (pageChange)=\\\"onPageChanged($event)\\\"></pagination-controls>\\n      </mat-card>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!users\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"user-spinner\\\">   \\n  <mat-spinner color=\\\"primary\\\"></mat-spinner>    \\n</div>\\n\\n\"","module.exports = \".user-form .form-field-outer {\\n  width: 850px;\\n}\\n.user-form .mat-radio-button {\\n  margin-right: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZW5xdWlyeS9lbnF1aXJ5LWRpbG9nL0U6XFxvdXJDUk0vc3JjXFxhcHBcXHBhZ2VzXFxlbnF1aXJ5XFxlbnF1aXJ5LWRpbG9nXFxlbnF1aXJ5LWRpbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9lbnF1aXJ5L2VucXVpcnktZGlsb2cvZW5xdWlyeS1kaWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFlBQUE7QUNBUjtBREVJO0VBQ0ksa0JBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VucXVpcnkvZW5xdWlyeS1kaWxvZy9lbnF1aXJ5LWRpbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItZm9ybXtcclxuICAgIC5mb3JtLWZpZWxkLW91dGVye1xyXG4gICAgICAgIHdpZHRoOiA4NTBweDtcclxuICAgIH1cclxuICAgIC5tYXQtcmFkaW8tYnV0dG9ue1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTJweDtcclxuICAgIH1cclxufVxyXG5cclxuIiwiLnVzZXItZm9ybSAuZm9ybS1maWVsZC1vdXRlciB7XG4gIHdpZHRoOiA4NTBweDtcbn1cbi51c2VyLWZvcm0gLm1hdC1yYWRpby1idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { User, UserProfile, UserWork, UserContacts, UserSocial, UserSettings } from '../enquiry.model';\nimport { EnquiryServiceService } from '../../enquiry/enquiry_Service/enquiry-service.service'\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-enquiry-dilog',\n  templateUrl: './enquiry-dilog.component.html',\n  styleUrls: ['./enquiry-dilog.component.scss']\n})\nexport class EnquiryDilogComponent implements OnInit {\n  public form: FormGroup;\n  public passwordHide: boolean = true;\n  form_field: boolean = false;\n  source: any;\n  received: any = [];\n  target: [] = [];\n  users: any;\n  data: any[] = [];\n  title: any[] = ['text', 'number', 'password', 'email', 'date'];\n  user2: Object = { value: '' };\n  orderForm: FormGroup;\n  enquiry_field: any[] = [];\n  constructor(public dialogRef: MatDialogRef<EnquiryDilogComponent>, public router: Router,\n    @Inject(MAT_DIALOG_DATA) public user: User, public snackBar: MatSnackBar,\n    public fb: FormBuilder, public enquiryService: EnquiryServiceService) {\n\n\n    // this.form = this.fb.group({\n    //   enquiry_type: [''],\n    //   customer_type: [''],\n    //   organisation_name: [''],\n    //   source: [''],\n    //   mobile_no: [''],\n    //   fist_name: [''],\n    //   last_name: [''],\n    //   email: [''],\n    //   state: [''],\n    //   city: [''],\n    //   pin_code: [''],\n    //   address: [''],\n    //   requrment_product: ['']\n    // });\n\n    this.orderForm = this.fb.group({\n      company: ['5df381c37bbfd1117c7bc355'],\n      country: ['5df381907bbfd1117c7bc354'],\n      // value: [''],\n      received: this.fb.array([this.createItem()])\n    });\n  }\n\n  ngOnInit() {\n\n    console.log(this.user)\n    if (!this.user) {\n      this.enquiryService.get_enquiry_form().subscribe((res: any) => {\n        this.enquiry_field = res.data[0].received;\n        this.setFormValue(this.enquiry_field)\n      })\n    } else {\n      this.data.push(this.user)\n      this.enquiry_field = this.data[0].received;\n      this.setFormValue(this.enquiry_field)\n    }\n  }\n\n  get_enquiry_form() {\n    let data = this.orderForm.value;\n    console.log(data)\n    this.enquiryService.get_enquiry_form().subscribe((res: any) => {\n      this.enquiry_field = res.data;\n      console.log(this.enquiry_field)\n      if (this.enquiry_field.length > 0) {\n        console.log(\"djsfghdsgfh\")\n        this.enquiryService.update_enquiry_form(data).subscribe((res: any) => {\n          console.log(res)\n        })\n      } else {\n        this.enquiryService.create_enquiry_form(data).subscribe((res: any) => {\n          console.log(res)\n        })\n      }\n    })\n  }\n\n\n  createItem(): FormGroup {\n    return this.fb.group({\n      field_name: [''],\n      field_type: [''],\n      value: ['']\n    });\n  }\n  // get formArr() {\n  //   return this.customerForm.get('distributor') as FormArray;\n  // }\n\n  get formarr() {\n    return this.orderForm.get('received') as FormArray;\n  }\n  addItem(): void {\n    this.formarr.push(this.createItem());\n  }\n  removePeriod(i) {\n    this.formarr.removeAt(i);\n  }\n\n  get_source() {\n    this.enquiryService.Enquiry_sourc().subscribe((res: any) => {\n      this.source = res.source\n      console.log(this.source)\n    })\n  }\n\n  changeuserRole() {\n    const user_role = this.form.get('source').value;\n    console.log(user_role)\n  }\n  close(): void {\n    this.dialogRef.close();\n  }\n  submit() {\n    if (this.orderForm.invalid) {\n      return;\n    }\n    // let data = this.form.value;\n    let data = this.orderForm.value;\n    // data.user = this.enquiry_field[0].user;\n    console.log(data)\n    this.enquiryService.create_enquiry(data).subscribe((res: any) => {\n      this.users = res.data;\n      if (res.status == 200 && res.error == false) {\n        this.dialogRef.close(this.orderForm.value);\n        let message = \"Enquiry Create Successfully.\";\n        let action = \"OK\"\n        this.snackBar.open(message, action, {\n          duration: 2000,\n        });\n      } else {\n\n      }\n      console.log(\"enquiry created\", res)\n    })\n  }\n  add_form() {\n    console.log(\"dkjdjgh\")\n    if (this.form_field == false) {\n      // while (this.formarr.length !== 0) { this.formarr.removeAt(0); }\n      this.form_field = true;\n\n    } else {\n      this.form_field = false;\n    }\n  }\n  setFormValue(data) {\n    console.log(data, this.orderForm.get('received').value)\n\n    // for (let index2 = 0; index2 <  data[0].received.length; index2++) {\n    //   delete data[0].received[index2]._id\n    // }\n    for (let index = 0; index < data.length - 1; index++) {\n      // console.log(data[index].field_name , index)\n      delete data[index]._id\n      // this.orderForm.controls['received'].get('field_name').setValue(data[0].received[index].field_name);\n      this.formarr.push(this.createItem());\n    }\n\n    this.orderForm.get('received').setValue(data);\n\n  }\n  create_form() {\n    this.get_enquiry_form()\n  }\n}\n","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;  \r\n    profile: UserProfile;\r\n    work: UserWork;\r\n    contacts: UserContacts;\r\n    social: UserSocial;\r\n    settings: UserSettings;\r\n  }\r\n  \r\n  export class UserProfile {  \r\n    name: string;\r\n    surname: string;  \r\n    birthday: Object;\r\n    gender: string;\r\n    image: string;\r\n  }\r\n  \r\n  export class UserWork {\r\n    company: string;\r\n    position: string;\r\n    salary: number;\r\n  }\r\n  \r\n  export class UserContacts{\r\n    email: string;\r\n    phone: string;\r\n    address: string;  \r\n  }\r\n  \r\n  export class UserSocial {\r\n    facebook: string;\r\n    twitter: string;\r\n    google: string;\r\n  }\r\n  \r\n  export class UserSettings{\r\n    isActive: boolean;\r\n    isDeleted: boolean;\r\n    registrationDate: Date;\r\n    joinedDate: Date;\r\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PipesModule } from '../../theme/pipes/pipes.module';\n\nimport { EnquiryComponent } from './enquiry/enquiry.component';\nimport{EnquiryServiceService} from '../enquiry/enquiry_Service/enquiry-service.service';\nimport { EnquiryDilogComponent } from './enquiry-dilog/enquiry-dilog.component'\nimport { MatInputModule } from '@angular/material';\nexport const routes = [\n  { path: '', redirectTo: 'EnquiryComponent', pathMatch: 'full'},\n  { path: 'enquiry', component: EnquiryComponent, data: { breadcrumb: 'Enquiry' } },\n]\n\n@NgModule({\n  declarations: [\n    EnquiryComponent,\n    EnquiryDilogComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    MatInputModule,\n     ReactiveFormsModule,\n     NgxPaginationModule,\n     SharedModule,\n     PipesModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [EnquiryServiceService],\n  entryComponents:[\n    EnquiryDilogComponent\n  ]\n})\n\n\nexport class EnquiryModule {\n  \n }\n console.log(\"sflkdshfjdj\")\n","module.exports = \".user-name {\\n  padding: 0 12px;\\n  font-weight: 400;\\n}\\n\\n.user-content {\\n  padding: 10px;\\n}\\n\\n.user-content .user-img {\\n  position: relative;\\n}\\n\\n.user-content .user-img img {\\n  border-radius: 50%;\\n  width: 80px;\\n  height: 80px;\\n}\\n\\n.user-content .user-img img.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-content .user-img .mat-icon {\\n  position: absolute;\\n  top: -8px;\\n  left: -8px;\\n  font-size: 96px;\\n  height: 96px;\\n  width: 96px;\\n}\\n\\n.user-content .mat-slide-toggle {\\n  margin-top: 15px;\\n}\\n\\n.user-content .user-details span {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.user-content .user-details .mat-icon {\\n  padding: 2px 10px;\\n}\\n\\n.user-content .user-details.blocked {\\n  opacity: 0.5;\\n}\\n\\n.user-search {\\n  width: 0;\\n  overflow: hidden;\\n  transition: 0.3s;\\n}\\n\\n.user-search .mat-form-field {\\n  width: 100% !important;\\n  text-align: center !important;\\n  height: 36px;\\n}\\n\\n.user-search .mat-form-field-infix {\\n  padding: 5px;\\n}\\n\\n.user-search .mat-input-element {\\n  text-align: center;\\n}\\n\\n.user-search.show {\\n  width: 100%;\\n  overflow: visible;\\n}\\n\\n.user-spinner {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZW5xdWlyeS9lbnF1aXJ5L0U6XFxvdXJDUk0vc3JjXFxhcHBcXHBhZ2VzXFxlbnF1aXJ5XFxlbnF1aXJ5XFxlbnF1aXJ5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9lbnF1aXJ5L2VucXVpcnkvZW5xdWlyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQ0NKOztBRENBO0VBQ0ksYUFBQTtBQ0VKOztBRERJO0VBQ0ksa0JBQUE7QUNHUjs7QURGUTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUNJWjs7QURIWTtFQUNJLFlBQUE7QUNLaEI7O0FERlE7RUFDSSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDSVo7O0FEREk7RUFDSSxnQkFBQTtBQ0dSOztBREFRO0VBQ0ksZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDRVo7O0FEQVE7RUFDSSxpQkFBQTtBQ0VaOztBREFRO0VBQ0ksWUFBQTtBQ0VaOztBREdBO0VBQ0ksUUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNBSjs7QURDSTtFQUNJLHNCQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0FDQ1I7O0FEQ0k7RUFDSSxZQUFBO0FDQ1I7O0FEQ0k7RUFDSSxrQkFBQTtBQ0NSOztBRENJO0VBQ0ksV0FBQTtFQUNBLGlCQUFBO0FDQ1I7O0FER0E7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFBTyxRQUFBO0VBQVUsU0FBQTtFQUFXLE9BQUE7QUNHaEMiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9lbnF1aXJ5L2VucXVpcnkvZW5xdWlyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLW5hbWV7XHJcbiAgICBwYWRkaW5nOiAwIDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcbi51c2VyLWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgLnVzZXItaW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgICAgICAgJi5ibG9ja2Vke1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tYXQtaWNvbntcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IC04cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IC04cHg7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOTZweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA5NnB4O1xyXG4gICAgICAgICAgICB3aWR0aDogOTZweDsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LXNsaWRlLXRvZ2dsZXtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgfVxyXG4gICAgLnVzZXItZGV0YWlsc3tcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLm1hdC1pY29ue1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAycHggMTBweDtcclxuICAgICAgICB9IFxyXG4gICAgICAgICYuYmxvY2tlZHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIH1cclxuICAgIH0gICAgXHJcbn1cclxuXHJcbi51c2VyLXNlYXJjaHtcclxuICAgIHdpZHRoOiAwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICAubWF0LWZvcm0tZmllbGR7XHJcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7ICAgICAgICBcclxuICAgIH1cclxuICAgIC5tYXQtZm9ybS1maWVsZC1pbmZpeHtcclxuICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICB9XHJcbiAgICAubWF0LWlucHV0LWVsZW1lbnR7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgJi5zaG93e1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgfVxyXG59XHJcblxyXG4udXNlci1zcGlubmVye1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOjA7IHJpZ2h0OiAwOyBib3R0b206IDA7IGxlZnQ6MDtcclxufSIsIi51c2VyLW5hbWUge1xuICBwYWRkaW5nOiAwIDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi51c2VyLWNvbnRlbnQge1xuICBwYWRkaW5nOiAxMHB4O1xufVxuLnVzZXItY29udGVudCAudXNlci1pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udXNlci1jb250ZW50IC51c2VyLWltZyBpbWcge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG59XG4udXNlci1jb250ZW50IC51c2VyLWltZyBpbWcuYmxvY2tlZCB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi51c2VyLWNvbnRlbnQgLnVzZXItaW1nIC5tYXQtaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtOHB4O1xuICBsZWZ0OiAtOHB4O1xuICBmb250LXNpemU6IDk2cHg7XG4gIGhlaWdodDogOTZweDtcbiAgd2lkdGg6IDk2cHg7XG59XG4udXNlci1jb250ZW50IC5tYXQtc2xpZGUtdG9nZ2xlIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cbi51c2VyLWNvbnRlbnQgLnVzZXItZGV0YWlscyBzcGFuIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4udXNlci1jb250ZW50IC51c2VyLWRldGFpbHMgLm1hdC1pY29uIHtcbiAgcGFkZGluZzogMnB4IDEwcHg7XG59XG4udXNlci1jb250ZW50IC51c2VyLWRldGFpbHMuYmxvY2tlZCB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuLnVzZXItc2VhcmNoIHtcbiAgd2lkdGg6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IDAuM3M7XG59XG4udXNlci1zZWFyY2ggLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMzZweDtcbn1cbi51c2VyLXNlYXJjaCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICBwYWRkaW5nOiA1cHg7XG59XG4udXNlci1zZWFyY2ggLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnVzZXItc2VhcmNoLnNob3cge1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi51c2VyLXNwaW5uZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbn0iXX0= */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AppSettings } from '../../../app.settings';\nimport { Settings } from '../../../app.settings.model';\nimport { User, UserProfile, UserWork, UserContacts, UserSocial, UserSettings } from '../../users/user.model';\nimport { EnquiryServiceService } from '../../enquiry/enquiry_Service/enquiry-service.service'\nimport { EnquiryDilogComponent } from '../enquiry-dilog/enquiry-dilog.component'\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\n\n@Component({\n  selector: 'app-enquiry',\n  templateUrl: './enquiry.component.html',\n  styleUrls: ['./enquiry.component.scss']\n})\nexport class EnquiryComponent implements OnInit {\n\n  public users: User[];\n  public searchText: string;\n  public page: any;\n  source: any;\n  public settings: Settings;\n  constructor(public appSettings: AppSettings,\n    public dialog: MatDialog,\n    public enquiryService: EnquiryServiceService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit() {\n    // this.get_source()\n    this.enquiryService.get_enquiry().subscribe((res: any) => {\n      this.users = res.data\n\n      // this.enquiry_field = res.data;\n    })\n    this.enquiryService.me().subscribe((data: any) => {\n      console.log(data)\n    })\n  }\n\n  public openUserDialog(user) {\n    let dialogRef = this.dialog.open(EnquiryDilogComponent, {\n      data: user\n    });\n    dialogRef.afterClosed().subscribe((data: any) => {\n      if (data.length > 0) {\n        this.ngOnInit();\n      }\n    })\n    \n  }\n  public onPageChanged(event) {\n    this.page = event;\n    this.ngOnInit();\n    if (this.settings.fixedHeader) {\n      document.getElementById('main-content').scrollTop = 0;\n    }\n    else {\n      document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EnquiryServiceService {\n  headers = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': \"Bearer \" + localStorage.getItem('Token')\n  });\n  url = \"https://crmosum.in/api/enquiry\"\n  url2 = \"https://newcrmapi.herokuapp.com/api\"\n\n  constructor(private http: HttpClient) { }\n\n\n  Create_enquiry(userdata){\n    return this.http.post(this.url + '/create' ,userdata);\n  }\n  Enquiry_sourc(){\n    return this.http.post(this.url + '/source' , {headers:this.headers});\n  }\n  create_enquiry_form(data){\n    console.log(this.headers)\n    return this.http.post(this.url2 + \"/enquiryForm/create\" , data , {headers:this.headers})\n  }\n  create_enquiry(data){\n    console.log(this.headers)\n    return this.http.post(this.url2 + \"/enquiry/create\" , data , {headers:this.headers})\n  }\n  update_enquiry_form(data){\n    console.log(this.headers)\n    return this.http.put(this.url2 + \"/enquiryForm\" , data , {headers:this.headers})\n  }\n  // Create_enquiry(userdata){\n  //   return this.http.post(this.url + '/' ,userdata);\n  // }\n  get_enquiry_form(){\n    return this.http.get(this.url2 + \"/enquiryForm\" , {headers :this.headers})\n  }\n  get_enquiry(){\n    return this.http.get(this.url2 + \"/enquiry\" , {headers :this.headers})\n  }\n  me(){\n    return this.http.get(this.url2 + \"/user\" , {headers :this.headers})\n  }\n}\n"],"sourceRoot":""}